{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","variable","className","mode","href","title","type","id","role","elsehere","tabindex","onClick","toggleMode","HTMLfor","redTheme","greenTheme","TextForm","useState","text","setText","container","heading","value","style","backgroundColor","onChange","event","console","log","target","placeholder","newText","toUpperCase","showAlert","toLowerCase","replace","split","length","toFixed","prototype","PropTypes","string","defaultProps","Alert","word","alert","class","slice","msg","About","color","myStyle","setMyStyle","btnText","setbtnText","border","App","setMode","setAlert","message","setTimeout","document","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.91d13220.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(variable) {\r\n\r\n    return (\r\n<nav className={`navbar navbar-expand-lg navbar-${variable.mode} bg-${variable.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href='/'>{variable.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href='/'>Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href='/about'>About</a>\r\n        </li>\r\n        <li className=\"nav-item dropdown\">\r\n          <a className=\"nav-link dropdown-toggle\" href='/' id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            Dropdown\r\n          </a>\r\n          <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <li><a className=\"dropdown-item\" href='/'>Action</a></li>\r\n            <li><a className=\"dropdown-item\" href='/'>Another action</a></li>\r\n            <li><hr className=\"dropdown-divider\"/></li>\r\n            <li><a className=\"dropdown-item\" href='/'>{variable.elsehere}</a></li>\r\n          </ul>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link disabled\" href='/' tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\r\n        </li>\r\n      </ul>\r\n      <div className={`mx-2 form-check form-switch text-${variable.mode==='light'?'dark':'light'}`}>\r\n      <input className=\"form-check-input\" onClick={variable.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckChecked\"/>\r\n      <label className=\"form-check-label\"  HTMLfor=\"flexSwitchCheckChecked\">Enable Dark Mode</label>\r\n      </div>\r\n      <div className=\"form-check form-switch mx-2\">\r\n  <input className=\"form-check-input\" onClick={variable.redTheme} type=\"checkbox\" id=\"flexSwitchCheckChecked\"/>\r\n  <label className=\"form-check-label\"  HTMLfor=\"flexSwitchCheckChecked\">Red Theme</label>\r\n</div>\r\n<div className=\"form-check form-switch mx-2\">\r\n  <input className=\"form-check-input\" onClick={variable.greenTheme} type=\"checkbox\" id=\"flexSwitchCheckChecked\"/>\r\n  <label className=\"form-check-label\" HTMLfor=\"flexSwitchCheckChecked\">Green Theme</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\nNavbar.prototype= {title: PropTypes.string}\r\nNavbar.defaultProps = {\r\n    elsehere :'This si else here'\r\n}\r\n","import React, {useState} from \"react\";\r\n\r\n\r\nexport default function TextForm(variable) {\r\n    const [text, setText] = useState(\"\");\r\n    const handleClick=()=>{\r\n        console.log('CLciker'+text);\r\n        let newText = text.toUpperCase()\r\n        setText(newText)\r\n        variable.showAlert(\"\",'danger')\r\n    }\r\n    const handleLowerClick=()=>{\r\n        console.log('CLciker'+text);\r\n        let newText = text.toLowerCase()\r\n        setText(newText)\r\n        variable.showAlert(\"\", 'success')\r\n    }\r\n    const extSpaceRemover=()=>{\r\n        console.log('CLciker'+text);\r\n        let newText = text.replace(\"  \",\" success\")\r\n        setText(newText)\r\n        variable.showAlert(\"\",'success')\r\n    }\r\n    const HandleonChange=(event)=>{\r\n        console.log('On change');\r\n        setText(event.target.value)\r\n    }\r\n\r\n    \r\n  return (\r\n    <>\r\n    <div container>\r\n      <h2 >{variable.heading} </h2>\r\n      <div className=\"form-floating\">\r\n        <textarea value={text}\r\n        style={{backgroundColor:variable.mode==='dark'?'white':'grey'}}\r\n        onChange={HandleonChange}\r\n          className=\"form-control\"\r\n          placeholder=\"Leave a comment here\"\r\n          id=\"mybox\"\r\n          \r\n        ></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary my-4 mx-3\" onClick={handleClick}\r\n      >Convert To upperCase</button>\r\n      <button className=\"btn btn-primary my-4 mx-3\" onClick={handleLowerClick}\r\n      >Convert To LowerCase</button>\r\n      <button className=\"btn btn-primary my-4 mx-3\" onClick={extSpaceRemover}\r\n      >Remove Extraspaces</button>\r\n\r\n    </div>\r\n    <div className=\"conatiner my-2\">\r\n      <h1>Your Text summary</h1>\r\n      <p>{text.split(' ').length} and {text.length} characters</p>\r\n      <p>You will take {text.split(' ').length.toFixed(1)*0.8} seconds time to read this words.</p>\r\n      <h2>Preview</h2>\r\n      <p>{text}</p>\r\n    </div>\r\n    </> \r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(variable) {\r\n    // const capitali= (word)=>{\r\n    //     const lower = word.toLowerCase();\r\n    //     return lower.charAt(0).toLowerCase()+lower.slice(1)\r\n    // }\r\n    const myf= (word)=>{\r\n        if (word==='success') {\r\n            word = word.slice(1)\r\n            word= 'S'+ word\r\n            return word\r\n        }\r\n        else{\r\n            word =word.slice(1)\r\n            word ='Failure'\r\n            return word\r\n        }\r\n    }\r\n    return (\r\n        variable.alert &&\r\n        <div>\r\n            <div class={`alert alert-${variable.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{myf(variable.alert.type)} </strong>{variable.alert.msg}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function About() {\r\n  const [myStyle, setMyStyle] = useState({\r\n    color: \"white\",\r\n    backgroundColor: \"black\",\r\n  });\r\n  const [btnText, setbtnText] = useState(\"Enable Dark Mode\");\r\n  const toggleStyle = () => {\r\n    if (myStyle.color === \"black\") {\r\n      setMyStyle({\r\n        color: \"white\",\r\n        backgroundColor: \"black\",\r\n        border: \"1px solid white\",\r\n      });\r\n      setbtnText(\"Enable Light Mode\");\r\n    } else {\r\n      setMyStyle({\r\n        color: \"black\",\r\n        backgroundColor: \"white\",\r\n        border: \"1px solid grey\",\r\n      });\r\n      setbtnText(\"Enable Dark Mode\");\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <div container style={myStyle}>\r\n      <h2>About US</h2>\r\n      <div\r\n        class=\"accordion accordion-flush \"\r\n        style={myStyle}\r\n        id=\"accordionFlushExample\"\r\n      >\r\n        <div class=\"accordion-item\" style={myStyle}>\r\n          <h2 class=\"accordion-header\" id=\"flush-headingOne\">\r\n            <button\r\n              class=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#flush-collapseOne\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"flush-collapseOne\"\r\n              style={myStyle}\r\n            >\r\n              Accordion Item #1\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"flush-collapseOne\"\r\n            class=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"flush-headingOne\"\r\n            data-bs-parent=\"#accordionFlushExample\"\r\n          >\r\n            <div class=\"accordion-body\">\r\n              Placeholder content for this accordion, which is intended to\r\n              demonstrate the class. This is the first item's accordion body.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"accordion-item \" style={myStyle}>\r\n          <h2 class=\"accordion-header\" id=\"flush-headingTwo\">\r\n            <button\r\n              style={myStyle}\r\n              class=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#flush-collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"flush-collapseTwo\"\r\n            >\r\n              Accordion Item #2\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"flush-collapseTwo\"\r\n            class=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"flush-headingTwo\"\r\n            data-bs-parent=\"#accordionFlushExample\"\r\n          >\r\n            <div class=\"accordion-body\">\r\n              Placeholder content for this accordion, which is intended to\r\n              demonstrate the class. This is the second item's accordion body.\r\n              Let's imagine this being filled with some actual content.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"accordion-item\" style={myStyle}>\r\n          <h2 class=\"accordion-header\" id=\"flush-headingThree\">\r\n            <button\r\n              style={myStyle}\r\n              class=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#flush-collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"flush-collapseThree\"\r\n            >\r\n              Accordion Item #3\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"flush-collapseThree\"\r\n            class=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"flush-headingThree\"\r\n            data-bs-parent=\"#accordionFlushExample\"\r\n          >\r\n            <div class=\"accordion-body\">\r\n              Placeholder content for this accordion, which is intended to\r\n              demonstrate the <code>.accordion-flush</code> class. This is the\r\n              third item's accordion body. Nothing more exciting happening here\r\n              in terms of content, but just filling up the space to make it\r\n              look, at least at first glance, a bit more representative of how\r\n              this would look in a real-world application.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container my-3\"></div>\r\n      <button\r\n        onClick={toggleStyle}\r\n        className='type=\"button\" class=\"btn btn-secondary'\r\n      >\r\n        {btnText}\r\n      </button>\r\n      \r\n    </div>\r\n  );\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar'\nimport TextForm from './components/TextForm'\nimport Alert from './components/Alert'\nimport About from './components/About'\nimport React, { useState } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\n// import About from './components/About'\nfunction App() {\n  const [mode, setMode] = useState(\"light\")\n  const [alert, setAlert] = useState(null)\n  const showAlert=(message, type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(()=>{\n      setAlert(null)\n    },2000)\n  }\n  const toggleMode= ()=>{\n    if (mode==='red' || mode==='green'|| mode==='light') {\n      setMode('dark')\n      document.body.style.backgroundColor='#282a35'\n      document.body.style.color='white'\n      showAlert('Dark Mode has been enabled','success')\n      document.title=\"TextUtils - Dark Mode\"\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor='white'\n      document.body.style.color='black'\n      showAlert('Light Mode has been enabled','success')\n      document.title=\"TextUtils \"\n    }\n  }\n  const redTheme=()=>{\n    if (mode==='green' || mode==='dark'|| mode==='light') {\n      setMode('red')\n      showAlert('Red Mode has been enabled','success')\n      document.body.style.backgroundColor='rgb(178,34,34)'\n      document.body.style.color='white'\n      document.title=\"TextUtils - Red Mode\"\n      console.log('this is non rted');\n    }\n    else{\n      setMode('light')\n      showAlert('Light Mode has been enabled','success')\n\n      document.body.style.backgroundColor='white'\n      document.body.style.color='black'\n      document.title=\"TextUtils\"\n    }\n  }\n  const greenTheme=()=>{\n    if (mode==='red' || mode==='dark'|| mode==='light') {\n      setMode('green')\n      document.body.style.backgroundColor='green'\n      document.body.style.color='white'\n      showAlert('Green Mode has been enabled','success')\n      console.log('this is non rted');\n      document.title=\"TextUtils Green Mode\"\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor='white'\n      document.body.style.color='black';\n      showAlert('Light Mode has been enabled','success')\n      document.title=\"TextUtils\"\n    }\n  }\n\n  return (\n    <>\n    <Router>\n\n<Navbar title=\"TextUtils2\" mode={mode} toggleMode={toggleMode} redTheme={redTheme} greenTheme={greenTheme} />\n<Alert alert={alert}/>\n<div className=\"container my-3\">\n<Switch> */}\n          <Route exact    path=\"/about\">\n            <About />\n          </Route>\n           <Route exact path=\"/\">\n            <TextForm showAlert={showAlert} heading = \"Enter ther text to analyze\"  />\n          </Route>\n        </Switch>\n</div>\n     </Router>\n    <h1>asd</h1>\n    </>\n  ); \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}